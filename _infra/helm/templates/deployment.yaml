apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      env: "{{ .Values.env }}"
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        env: "{{ .Values.env }}"
    spec:
      containers:
        - name: ras-rm-auth-service
          image: "eu.gcr.io/ons-rasrmbs-management/{{ .Chart.Name }}:{{ .Chart.AppVersion }}"
          imagePullPolicy:
          ports:
            - name: http-server
              containerPort: 8041
          readinessProbe:
            httpGet:
              path: /info
              port: 8041
            initialDelaySeconds: 1
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /info
              port: 8041
            initialDelaySeconds: 1
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          env:
          - name: DB_HOST
            value: $(POSTGRES_SERVICE_HOST)
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: db-config
                key: db-port
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: db-config
                key: db-name
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: password
          - name: SECURITY_USER_NAME
            valueFrom:
              secretKeyRef:
                name: oauth-secret
                key: oauth-client-id
          - name: SECURITY_USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: oauth-secret
                key: oauth-client-secret
          - name: PORT
            value: "8041"
          - name: APP_SETTINGS
            value: "DevelopmentConfig"
          - name: DATABASE_URI
            value: "postgresql://$(DB_USERNAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)"
          - name: ZIPKIN_DSN
            value: "http://$(ZIPKIN_SERVICE_HOST):$(ZIPKIN_SERVICE_PORT)/api/v1/spans"
          - name: ZIPKIN_SAMPLE_RATE
            value: "100"
          - name: LOGGING_LEVEL
            value: "DEBUG"
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
