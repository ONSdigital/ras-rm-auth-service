apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Values.crons.dueDeletionNotificationScheduler.name }}
spec:
  schedule: "{{ .Values.crons.dueDeletionNotificationScheduler.cron }}"
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        spec:
          volumes:
            - name: google-cloud-key
              secret:
                secretName: google-application-credentials
            {{- if .Values.database.sqlProxyEnabled }}
            - name: cloudsql-instance-credentials
              secret:
                secretName: cloudsql-proxy-credentials
                defaultMode: 0444
                items:
                - key: "credentials.json"
                  path: "credentials.json"
            {{- end }}
          containers:
          - name: {{ .Values.crons.dueDeletionNotificationScheduler.image }}
            {{- if eq .Values.image.tag "latest"}}
            image: "{{ .Values.image.name }}/{{ .Values.crons.dueDeletionNotificationScheduler.image }}:{{ .Chart.AppVersion }}"
            {{- else}}
            image: "{{ .Values.image.devRepo }}/{{ .Values.crons.dueDeletionNotificationScheduler.image }}:{{ .Values.image.tag }}"
            {{- end}}
            volumeMounts:
              - name: google-cloud-key
                mountPath: /var/secrets/google
            env:
              - name: SECURITY_USER_NAME
                valueFrom:
                  secretKeyRef:
                    name: security-credentials
                    key: security-user
              - name: SECURITY_USER_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: security-credentials
                    key: security-password
              - name: GOOGLE_CLOUD_PROJECT
                value: "{{ .Values.gcp.project }}"
              - name: GOOGLE_APPLICATION_CREDENTIALS
                value: /var/secrets/google/credentials.json
              - name: PUBSUB_TOPIC
                value: "{{ .Values.gcp.topic }}"
              - name: DUE_DELETION_FIRST_NOTIFICATION_TEMPLATE
                value: "{{ .Values.notify.dueDeletionFirstNotificationTemplate }}"
              - name: DUE_DELETION_SECOND_NOTIFICATION_TEMPLATE
                value: "{{ .Values.notify.dueDeletionSecondNotificationTemplate }}"
              - name: DUE_DELETION_THIRD_NOTIFICATION_TEMPLATE
                value: "{{ .Values.notify.dueDeletionThirdNotificationTemplate }}"
              - name: SEND_EMAIL_TO_GOV_NOTIFY
                value: "{{ .Values.sendEmailToGovNotify }}"
              - name: PARTY_URL
                {{- if .Values.dns.enabled }}
                value: "http://party.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
                {{- else }}
                value: "http://$(PARTY_SERVICE_HOST):$(PARTY_SERVICE_PORT)"
                {{- end }}
              - name: PARTY_URL
                {{- if .Values.dns.enabled }}
                value: "http://auth.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
                {{- else }}
                value: "http://$(AUTH_SERVICE_HOST):$(AUTH_SERVICE_PORT)"
                {{- end }}
              - name: PORT
                value: "{{ .Values.container.port }}"
              - name: APP_SETTINGS
                value: "DevelopmentConfig"
              - name: LOGGING_LEVEL
                value: "DEBUG"
          restartPolicy: OnFailure
